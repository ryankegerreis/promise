{"ast":null,"code":"import _defineProperty from \"/Users/ryan/Documents/Ironhack/Course Projects/accountability/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _service$isLoggedIn$g;\n\nimport axios from 'axios';\nvar service = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' ? '/api' : 'http://localhost:5000/api',\n  withCredentials: true\n});\n\nvar errHandler = function errHandler(err) {\n  console.error(err);\n\n  if (err.response && err.response.data) {\n    console.error(\"API response\", err.response.data);\n    throw err.response.data.message;\n  }\n\n  throw err;\n};\n\nexport default (_service$isLoggedIn$g = {\n  service: service,\n  // This method is synchronous and returns true or false\n  // To know if the user is connected, we just check if we have a value for localStorage.getItem('user')\n  isLoggedIn: function isLoggedIn() {\n    return localStorage.getItem('user') != null;\n  },\n  // This method returns the user from the localStorage\n  // Be careful, the value is the one when the user logged in for the last time\n  getLocalStorageUser: function getLocalStorageUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  },\n  // This method signs up and logs in the user\n  signup: function signup(userInfo) {\n    return service.post('/signup', userInfo).then(function (res) {\n      // If we have localStorage.getItem('user') saved, the application will consider we are loggedin\n      localStorage.setItem('user', JSON.stringify(res.data));\n      return res.data;\n    }).catch(errHandler);\n  },\n  login: function login(username, password) {\n    return service.post('/login', {\n      username: username,\n      password: password\n    }).then(function (res) {\n      // If we have localStorage.getItem('user') saved, the application will consider we are loggedin\n      localStorage.setItem('user', JSON.stringify(res.data));\n      return res.data;\n    }).catch(errHandler);\n  },\n  logout: function logout() {\n    localStorage.removeItem('user');\n    return service.get('/logout');\n  },\n  // This is an example on how to use this method in a different file\n  // api.getCountries().then(countries => { /* ... */ })\n  getGoals: function getGoals() {\n    return service.get('/goals').then(function (res) {\n      return res.data;\n    }).catch(errHandler);\n  },\n  getMyGoals: function getMyGoals() {\n    return service.get('/mygoals').then(function (res) {\n      return res.data;\n    }).catch(errHandler);\n  }\n}, _defineProperty(_service$isLoggedIn$g, \"getMyGoals\", function getMyGoals() {\n  return service.get('/mygoals').then(function (res) {\n    return res.data;\n  }).catch(errHandler);\n}), _defineProperty(_service$isLoggedIn$g, \"addGoal\", function addGoal(body) {\n  return service.post('/savegoal', body).then(function (res) {\n    return res.data;\n  }).catch(errHandler);\n}), _defineProperty(_service$isLoggedIn$g, \"getSecret\", function getSecret() {\n  return service.get('/secret').then(function (res) {\n    return res.data;\n  }).catch(errHandler);\n}), _defineProperty(_service$isLoggedIn$g, \"addPicture\", function addPicture(file) {\n  var formData = new FormData();\n  formData.append(\"picture\", file);\n  return service.post('/endpoint/to/add/a/picture', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }).then(function (res) {\n    return res.data;\n  }).catch(errHandler);\n}), _service$isLoggedIn$g);","map":{"version":3,"sources":["/Users/ryan/Documents/Ironhack/Course Projects/accountability/client/src/api.js"],"names":["axios","service","create","baseURL","process","env","NODE_ENV","withCredentials","errHandler","err","console","error","response","data","message","isLoggedIn","localStorage","getItem","getLocalStorageUser","JSON","parse","signup","userInfo","post","then","res","setItem","stringify","catch","login","username","password","logout","removeItem","get","getGoals","getMyGoals","body","file","formData","FormData","append","headers"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nconst service = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' ? '/api' : 'http://localhost:5000/api',\n  withCredentials: true\n})\n\nconst errHandler = err => {\n  console.error(err)\n  if (err.response && err.response.data) {\n    console.error(\"API response\", err.response.data)\n    throw err.response.data.message\n  }\n  throw err\n}\n\nexport default {\n  service: service,\n\n  // This method is synchronous and returns true or false\n  // To know if the user is connected, we just check if we have a value for localStorage.getItem('user')\n  isLoggedIn() {\n    return localStorage.getItem('user') != null\n  },\n\n  // This method returns the user from the localStorage\n  // Be careful, the value is the one when the user logged in for the last time\n  getLocalStorageUser() {\n    return JSON.parse(localStorage.getItem('user'))\n  },\n\n  // This method signs up and logs in the user\n  signup(userInfo) {\n    return service\n      .post('/signup', userInfo)\n      .then(res => {\n        // If we have localStorage.getItem('user') saved, the application will consider we are loggedin\n        localStorage.setItem('user', JSON.stringify(res.data))\n        return res.data\n      })\n      .catch(errHandler)\n  },\n\n  login(username, password) {\n    return service\n      .post('/login', {\n        username,\n        password,\n      })\n      .then(res => {\n        // If we have localStorage.getItem('user') saved, the application will consider we are loggedin\n        localStorage.setItem('user', JSON.stringify(res.data))\n        return res.data\n      })\n      .catch(errHandler)\n  },\n\n  logout() {\n    localStorage.removeItem('user')\n    return service\n      .get('/logout')\n  },\n\n  // This is an example on how to use this method in a different file\n  // api.getCountries().then(countries => { /* ... */ })\n  getGoals() {\n    return service\n      .get('/goals')\n      .then(res => res.data)\n      .catch(errHandler)\n  },\n\n  getMyGoals() {\n    return service\n      .get('/mygoals')\n      .then(res => res.data)\n      .catch(errHandler)\n  },\n\n  getMyGoals() {\n    return service\n      .get('/mygoals')\n      .then(res => res.data)\n      .catch(errHandler)\n  },\n\n  addGoal(body) {\n    return service\n      .post('/savegoal', body)\n      .then(res => res.data)\n      .catch(errHandler)\n  },\n\n  getSecret() {\n    return service\n      .get('/secret')\n      .then(res => res.data)\n      .catch(errHandler)\n  },\n\n  addPicture(file) {\n    const formData = new FormData()\n    formData.append(\"picture\", file)\n    return service\n      .post('/endpoint/to/add/a/picture', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      })\n      .then(res => res.data)\n      .catch(errHandler)\n  },\n}\n"]},"metadata":{},"sourceType":"module"}